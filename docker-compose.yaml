version: "3.8"

services:
  redis:
    build: ./init/redis
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./logs/redis:/var/log/redis
    command: >
      redis-server
      --loglevel warning
      --logfile /var/log/redis/redis.log
      --save 60 1
      --appendonly yes
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  mongodb:
    image: mongo:7.0
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: P@ssw0rd
      MONGO_INITDB_DATABASE: university
    volumes:
      - mongodb_data:/data/db
      - ./logs/mongodb:/var/log/mongodb
    healthcheck:
      test: [ "CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping')" ]
      interval: 15s
      timeout: 10s
      retries: 3

  neo4j:
    image: neo4j:5.16-community
    container_name: neo4j
    restart: unless-stopped
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: neo4j/P@ssw0rd
      NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
      NEO4J_dbms_logs_debug_level: INFO
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - ./logs/neo4j:/logs
    healthcheck:
      test: [ "CMD", "cypher-shell", "-u", "neo4j", "-p", "P@ssw0rd", "RETURN 1" ]
      interval: 20s
      timeout: 15s
      retries: 3

  elasticsearch:
    build: ./init/elasticsearch
    container_name: elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ELASTIC_USERNAME=admin
      - ELASTIC_PASSWORD=P@ssw0rd
      - path.logs=/usr/share/elasticsearch/logs
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - ./logs/elasticsearch:/usr/share/elasticsearch/logs
      - ./init/elasticsearch:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "curl -sSf -u admin:P@ssw0rd http://localhost:9200/_cluster/health | grep -q '\"status\":\"green\"' || exit 1" ]
      interval: 30s
      timeout: 20s
      retries: 5

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: P@ssw0rd
      POSTGRES_DB: university
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_INITDB_ARGS: "--data-checksums"
      POSTGRES_HOST_AUTH_METHOD: "trust"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./logs/postgres:/var/log/postgresql
      - ./init/postgres:/docker-entrypoint-initdb.d
    command: >
      sh -c "
      mkdir -p /var/log/postgresql &&
      chown postgres:postgres /var/log/postgresql &&
      exec docker-entrypoint.sh postgres 
      -c log_destination=stderr 
      -c logging_collector=on 
      -c log_directory='/var/log/postgresql' 
      -c log_filename='postgresql-%Y-%m-%d.log' 
      -c log_rotation_age=1d 
      -c log_rotation_size=0
      "
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d university" ]
      interval: 15s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
  mongodb_data:
  neo4j_data:
  neo4j_logs:
  elasticsearch_data:
  postgres_data:
